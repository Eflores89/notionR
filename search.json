[{"path":"https://Eflores89.github.io/notionR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Eduardo Flores. Maintainer.","code":""},{"path":"https://Eflores89.github.io/notionR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Flores E (2025). notionR: R interfase Notion API. R package version 0.0.9, https://Eflores89.github.io/notionR/.","code":"@Manual{,   title = {notionR: R interfase for Notion API},   author = {Eduardo Flores},   year = {2025},   note = {R package version 0.0.9},   url = {https://Eflores89.github.io/notionR/}, }"},{"path":"https://Eflores89.github.io/notionR/index.html","id":"notionr","dir":"","previous_headings":"","what":"R interfase for Notion API","title":"R interfase for Notion API","text":"goal notionR connect Notion API R. Create, Modify, Download databases pages Notion. wrapper functions access Notion API using R package work progress! Use risk!","code":""},{"path":"https://Eflores89.github.io/notionR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"R interfase for Notion API","text":"can install development version notionR like :","code":"pak::pak(\"Eflores89/notionR\")"},{"path":"https://Eflores89.github.io/notionR/index.html","id":"access-to-notion-api","dir":"","previous_headings":"","what":"Access to Notion API","title":"R interfase for Notion API","text":"need owner Notion Workspace create integration. Read “Getting Started” Notion API : https://developers.notion.com/docs/getting-started Build first integration : https://developers.notion.com/docs/create--notion-integration Remember name integration Store API Secret way users workspace able use API integration share API Secret : choose authorization wisely. See page information authorization : https://developers.notion.com/docs/authorization recommend store API Secret environment variable prefered .Renviron file. Add variable like:","code":"usethis::edit_r_environ() NOTION_API_SECRET=\"secret_xxx111\""},{"path":[]},{"path":"https://Eflores89.github.io/notionR/index.html","id":"get-a-specific-database-table-content","dir":"","previous_headings":"Example","what":"Get a specific database table content","title":"R interfase for Notion API","text":"Open database want retrieve Notion Open full page Click “…” top right page Go “Connexions” database now accessible API Secret Get full URL page, retrieve characters last / ? e.g. URL https://www.notion./00001111bbbbcccc?v=ddddeeee33334444, database ID 00001111bbbbcccc now information download database follows: filter specific parameters see ?filters. can use code follows: See documentation get available filters : https://developers.notion.com/reference/post-database-query-filter","code":"library(notionR)  DATABASE_ID <- \"00001111bbbbcccc\"  data_project <- getNotionDatabase(   secret = Sys.getenv(\"NOTION_API_SECRET\"),    database = DATABASE_ID )  data_project # A tibble: 26 × 70    archived created_by.id      created_by.object created_time    <chr>    <chr>              <chr>             <chr>         1 FALSE    xxxxx-7e0a-480… user              2023-11-22T…  2 FALSE    xxxxx-7e0a-480… user              2023-10-28T…  3 FALSE    xxxxx-7e0a-480… user              2023-10-02T…  4 FALSE    xxxxx-7e0a-480… user              2023-09-30T…  5 FALSE    xxxxx-7e0a-480… user              2023-09-23T…  6 FALSE    xxxxx-7e0a-480… user              2023-09-23T…  7 FALSE    xxxxx-7e0a-480… user              2023-09-23T…  8 FALSE    xxxxx-7e0a-480… user              2023-09-23T…  9 FALSE    xxxxx-7e0a-480… user              2023-09-08T… 10 FALSE    xxxxx-7e0a-480… user              2023-08-26T… # ℹ 16 more rows # ℹ 66 more variables: icon.emoji <chr>, icon.type <chr>, #   id <chr>, last_edited_by.id <chr>, #   last_edited_by.object <chr>, last_edited_time <chr>, #   object <chr>, parent.database_id <chr>, #   parent.type <chr>, properties.Achievement.id <chr>, #   properties.Achievement.rollup.function <chr>, … # ℹ Use `print(n = ...)` to see more rows DATABASE_ID <- \"00001111bbbbcccc\"  # using {notionR} built-in functions  data_project <- getNotionDatabase(   secret = Sys.getenv(\"NOTION_API_SECRET\"),    database = DATABASE_ID,   filters = add_checkbox_filter(\"my property with checkbox\", equals = FALSE) )  # Or using list directly  data_project <- getNotionDatabase(   secret = Sys.getenv(\"NOTION_API_SECRET\"),    database = DATABASE_ID,   filters = list(property = \"my property with checkbox\", checkbox = list(equals = FALSE)) ) data_project"},{"path":"https://Eflores89.github.io/notionR/reference/addBlockH1.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds an H1 (heading one) Block to a Page — addBlockH1","title":"Adds an H1 (heading one) Block to a Page — addBlockH1","text":"Id refers page id, content text.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/addBlockH1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds an H1 (heading one) Block to a Page — addBlockH1","text":"","code":"addBlockH1(secret, id, content, toggle = FALSE)"},{"path":"https://Eflores89.github.io/notionR/reference/addBlockH1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds an H1 (heading one) Block to a Page — addBlockH1","text":"secret API token id Page id block appended content content append H1 toggle defaults FALSE. TRUE, create H1 Toggle.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/addBlockH2.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds an H2 (heading two) Block to a Page — addBlockH2","title":"Adds an H2 (heading two) Block to a Page — addBlockH2","text":"Id refers page id, content text.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/addBlockH2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds an H2 (heading two) Block to a Page — addBlockH2","text":"","code":"addBlockH2(secret, id, content, toggle = FALSE)"},{"path":"https://Eflores89.github.io/notionR/reference/addBlockH2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds an H2 (heading two) Block to a Page — addBlockH2","text":"secret API token id Page id block appended content content append H2 toggle defaults FALSE. TRUE, create H1 Toggle.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/addBlockParagraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds a Paragraph Block to a Page — addBlockParagraph","title":"Adds a Paragraph Block to a Page — addBlockParagraph","text":"Id refers page id, content text. HTML export text.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/addBlockParagraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds a Paragraph Block to a Page — addBlockParagraph","text":"","code":"addBlockParagraph(secret, id, content)"},{"path":"https://Eflores89.github.io/notionR/reference/addBlockParagraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds a Paragraph Block to a Page — addBlockParagraph","text":"secret API token id Page id block appended content content append","code":""},{"path":"https://Eflores89.github.io/notionR/reference/archivePage.html","id":null,"dir":"Reference","previous_headings":"","what":"Archive a Page — archivePage","title":"Archive a Page — archivePage","text":"Archive's notion page.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/archivePage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Archive a Page — archivePage","text":"","code":"archivePage(secret, id)"},{"path":"https://Eflores89.github.io/notionR/reference/archivePage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Archive a Page — archivePage","text":"secret Notion API token id page id","code":""},{"path":"https://Eflores89.github.io/notionR/reference/archivePage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Archive a Page — archivePage","text":"list response","code":""},{"path":"https://Eflores89.github.io/notionR/reference/archivePage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Archive a Page — archivePage","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/createNotionPage.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Page — createNotionPage","title":"Create a Page — createNotionPage","text":"Silent Return","code":""},{"path":"https://Eflores89.github.io/notionR/reference/createNotionPage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Page — createNotionPage","text":"","code":"createNotionPage(secret, parent_id, title_property, title = \"untitled\")"},{"path":"https://Eflores89.github.io/notionR/reference/createNotionPage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Page — createNotionPage","text":"secret API token parent_id database id page created page nest title_property name title property title title new page","code":""},{"path":"https://Eflores89.github.io/notionR/reference/createNotionPage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create a Page — createNotionPage","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/deleteBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"Delete a Block — deleteBlock","title":"Delete a Block — deleteBlock","text":"Deletes block","code":""},{"path":"https://Eflores89.github.io/notionR/reference/deleteBlock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Delete a Block — deleteBlock","text":"","code":"deleteBlock(secret, id)"},{"path":"https://Eflores89.github.io/notionR/reference/deleteBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Delete a Block — deleteBlock","text":"secret Notion API token id block id","code":""},{"path":"https://Eflores89.github.io/notionR/reference/deleteBlock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Delete a Block — deleteBlock","text":"list response","code":""},{"path":"https://Eflores89.github.io/notionR/reference/deleteBlock.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Delete a Block — deleteBlock","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/filters.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Operators — filters","title":"Filter Operators — filters","text":"Helps build database filter call human-readable intuition. must finish (using pipes) notion_filter(). Adds checkbox filter condition.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/filters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Operators — filters","text":"","code":"notion_filter(., sort = NULL)  notion_or(...)  add_checkbox_filter(property, equals = TRUE)  add_select_filter(property, equals)  add_relation_id_filter(property, equals)"},{"path":"https://Eflores89.github.io/notionR/reference/filters.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filter Operators — filters","text":". List filter conditions sort List sort conditions. NULL default. ... combination filters property name id property (column) database equals TRUE (default) FALSE condition meet checkbox. Equals (contains) select filter.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/filters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filter Operators — filters","text":"list list","code":""},{"path":"https://Eflores89.github.io/notionR/reference/filters.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Filter Operators — filters","text":"Still WIP, operators currently available.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/filters.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Filter Operators — filters","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/filters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filter Operators — filters","text":"","code":"if (FALSE) { # \\dontrun{ # to create an OR filter on two checkbox columns with id's \"tus\" and \"YiIx\"... my_query <- notion_or(add_checkbox_filter(\"tus\", TRUE),                       add_checkbox_filter(\"YiIx\", FALSE)) %>% notion_filter()  } # } # add a condition where checkbox should be checked add_checkbox_filter(\"id_column\") #> $property #> [1] \"id_column\" #>  #> $checkbox #> $checkbox$equals #> [1] TRUE #>  #>  # add a condition where checkbox should NOT be checked add_checkbox_filter(\"id_column\", FALSE) #> $property #> [1] \"id_column\" #>  #> $checkbox #> $checkbox$equals #> [1] FALSE #>  #>"},{"path":"https://Eflores89.github.io/notionR/reference/getBlock.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a block — getBlock","title":"Returns a block — getBlock","text":"Query API block ID retrieve JSON format (now)","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getBlock.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a block — getBlock","text":"","code":"getBlock(secret, id)"},{"path":"https://Eflores89.github.io/notionR/reference/getBlock.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a block — getBlock","text":"secret Notion API token id Notion block ID.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getBlock.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a block — getBlock","text":"JSON","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getBlock.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns a block — getBlock","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getMultiSelectValues.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a vector of the available multi-select options in a field — getMultiSelectValues","title":"Returns a vector of the available multi-select options in a field — getMultiSelectValues","text":"given column database field, creates vector entries. See parameters options.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getMultiSelectValues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a vector of the available multi-select options in a field — getMultiSelectValues","text":"","code":"getMultiSelectValues(   column,   strip_string = \"\\\\|\",   no_na = T,   only_unique = T,   show_progress = T )"},{"path":"https://Eflores89.github.io/notionR/reference/getMultiSelectValues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a vector of the available multi-select options in a field — getMultiSelectValues","text":"column vector column data.frame (usually, using getNotionDatabase, form db$column_name ) strip_string String strip >1 selects single database row. Defaults \"|\", default behaviour getNotionDatabase(). no_na Strip NA's? Defaults TRUE. only_unique Export unique values vector? Defaults TRUE. show_progress Print count values? Defaults TRUE.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getMultiSelectValues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a vector of the available multi-select options in a field — getMultiSelectValues","text":"vector","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getMultiSelectValues.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns a vector of the available multi-select options in a field — getMultiSelectValues","text":"call API.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getMultiSelectValues.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns a vector of the available multi-select options in a field — getMultiSelectValues","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabase.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a database as a data.frame — getNotionDatabase","title":"Returns a database as a data.frame — getNotionDatabase","text":"Query database Notion desired filters get database data.frame R download entire database (pages).","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabase.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a database as a data.frame — getNotionDatabase","text":"","code":"getNotionDatabase(   secret,   database,   filters = NULL,   show_progress = FALSE,   all_pages = TRUE,   cover_icon = FALSE )"},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabase.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a database as a data.frame — getNotionDatabase","text":"secret Notion API token database Notion database ID. Use normalizeChromaPageIds using directly browser. filters list built filter operators (see filters) query database. NULL query everything. show_progress show prints progress? all_pages download pages (loop thru paginations)? cover_icon also include cover icon metadata?","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabase.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a database as a data.frame — getNotionDatabase","text":"data.frame","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabase.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Returns a database as a data.frame — getNotionDatabase","text":"actually POST request per Notions API: https://developers.notion.com/reference/post-database-query","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabase.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns a database as a data.frame — getNotionDatabase","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabaseMetadata.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the database metadata as a data.frame — getNotionDatabaseMetadata","title":"Returns the database metadata as a data.frame — getNotionDatabaseMetadata","text":"Retrieve database's metadata referenced Notion API: https://developers.notion.com/reference/get-database","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabaseMetadata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the database metadata as a data.frame — getNotionDatabaseMetadata","text":"","code":"getNotionDatabaseMetadata(secret, database, raw = FALSE)"},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabaseMetadata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the database metadata as a data.frame — getNotionDatabaseMetadata","text":"secret Notion API token database Notion database ID raw TRUE flatten data.frame","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabaseMetadata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the database metadata as a data.frame — getNotionDatabaseMetadata","text":"data.frame","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabaseMetadata.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns the database metadata as a data.frame — getNotionDatabaseMetadata","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionDatabaseMetadata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Returns the database metadata as a data.frame — getNotionDatabaseMetadata","text":"","code":"if (FALSE) { # \\dontrun{ my_db <- \"database_id\" my_secret <- \"NOTION API Secret\"  my_db_data <- get_database_metadata(secret = my_secret, database = my_db) } # }"},{"path":"https://Eflores89.github.io/notionR/reference/getNotionPage.html","id":null,"dir":"Reference","previous_headings":"","what":"Get a Page — getNotionPage","title":"Get a Page — getNotionPage","text":"Gets Notion Page","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionPage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get a Page — getNotionPage","text":"","code":"getNotionPage(secret, id)"},{"path":"https://Eflores89.github.io/notionR/reference/getNotionPage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get a Page — getNotionPage","text":"secret Notion API token id page id","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionPage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get a Page — getNotionPage","text":"list response","code":""},{"path":"https://Eflores89.github.io/notionR/reference/getNotionPage.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Get a Page — getNotionPage","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/isEmptyNotionDatabaseExport.html","id":null,"dir":"Reference","previous_headings":"","what":"Is the database output empty ? — isEmptyNotionDatabaseExport","title":"Is the database output empty ? — isEmptyNotionDatabaseExport","text":"database output empty ?","code":""},{"path":"https://Eflores89.github.io/notionR/reference/isEmptyNotionDatabaseExport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is the database output empty ? — isEmptyNotionDatabaseExport","text":"","code":"isEmptyNotionDatabaseExport(dataframe)"},{"path":"https://Eflores89.github.io/notionR/reference/isEmptyNotionDatabaseExport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is the database output empty ? — isEmptyNotionDatabaseExport","text":"dataframe database output","code":""},{"path":"https://Eflores89.github.io/notionR/reference/normalizeChromePageIds.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns a page id from a copy-paste page id in browser — normalizeChromePageIds","title":"Returns a page id from a copy-paste page id in browser — normalizeChromePageIds","text":"Returns page id copy-paste page id browser","code":""},{"path":"https://Eflores89.github.io/notionR/reference/normalizeChromePageIds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns a page id from a copy-paste page id in browser — normalizeChromePageIds","text":"","code":"normalizeChromePageIds(x)"},{"path":"https://Eflores89.github.io/notionR/reference/normalizeChromePageIds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns a page id from a copy-paste page id in browser — normalizeChromePageIds","text":"x page id format: 1f4c70197b0e4589902d371adc1dbd9a","code":""},{"path":"https://Eflores89.github.io/notionR/reference/normalizeChromePageIds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns a page id from a copy-paste page id in browser — normalizeChromePageIds","text":"character","code":""},{"path":"https://Eflores89.github.io/notionR/reference/normalizeChromePageIds.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Returns a page id from a copy-paste page id in browser — normalizeChromePageIds","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateCheckbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates a Checkbox Property — updateCheckbox","title":"Updates a Checkbox Property — updateCheckbox","text":"Id refers page database, normalized using normalizeChromeId().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateCheckbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates a Checkbox Property — updateCheckbox","text":"","code":"updateCheckbox(secret, id, property_name, value = TRUE)"},{"path":"https://Eflores89.github.io/notionR/reference/updateCheckbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates a Checkbox Property — updateCheckbox","text":"secret API token id Page id updated property_name name property update (checkbox type property) value value update. Use R bollean object. Defaults TRUE.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateDate.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates a Date property — updateDate","title":"Updates a Date property — updateDate","text":"Id refers page database, normalized using normalizeChromeId().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateDate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates a Date property — updateDate","text":"","code":"updateDate(secret, id, property_name, value)"},{"path":"https://Eflores89.github.io/notionR/reference/updateDate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates a Date property — updateDate","text":"secret API token id Page id updated property_name name property update (date type property) value value update","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateEmoji.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates an Emoji Property of a page — updateEmoji","title":"Updates an Emoji Property of a page — updateEmoji","text":"Id refers page database, normalized using normalizeChromeId().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateEmoji.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates an Emoji Property of a page — updateEmoji","text":"","code":"updateEmoji(secret, id, emoji)"},{"path":"https://Eflores89.github.io/notionR/reference/updateEmoji.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates an Emoji Property of a page — updateEmoji","text":"secret API token id Page id updated emoji emoji update ","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateMultiSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates a Select Property — updateMultiSelect","title":"Updates a Select Property — updateMultiSelect","text":"Id refers page database, normalized using normalizeChromeId().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateMultiSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates a Select Property — updateMultiSelect","text":"","code":"updateMultiSelect(secret, id, property_name, value)"},{"path":"https://Eflores89.github.io/notionR/reference/updateMultiSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates a Select Property — updateMultiSelect","text":"secret API token id Page id updated property_name name property update (multiselect type property) value value(s) update. 1 value multiple, created c().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateMultiSelect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Updates a Select Property — updateMultiSelect","text":"rewrite whatever already property. append another select.","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateNumber.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates a Number Property — updateNumber","title":"Updates a Number Property — updateNumber","text":"Id refers page database, normalized using normalizeChromeId().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateNumber.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates a Number Property — updateNumber","text":"","code":"updateNumber(secret, id, property_name, value)"},{"path":"https://Eflores89.github.io/notionR/reference/updateNumber.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates a Number Property — updateNumber","text":"secret API token id Page id updated property_name name property update (number type property) value value update","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updatePageCover.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates a Page Cover — updatePageCover","title":"Updates a Page Cover — updatePageCover","text":"Updates page cover url specified","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updatePageCover.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates a Page Cover — updatePageCover","text":"","code":"updatePageCover(secret, id, cover_url)"},{"path":"https://Eflores89.github.io/notionR/reference/updatePageCover.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates a Page Cover — updatePageCover","text":"secret Notion API token id page id updated cover_url url cover update","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updatePageCover.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Updates a Page Cover — updatePageCover","text":"list response","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updatePageCover.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Updates a Page Cover — updatePageCover","text":"Eduardo Flores","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateRelationship.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates (adds) a relationship to a page id — updateRelationship","title":"Updates (adds) a relationship to a page id — updateRelationship","text":"Id refers page database, normalized using normalizeChromeId().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateRelationship.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates (adds) a relationship to a page id — updateRelationship","text":"","code":"updateRelationship(secret, id, property_name, value)"},{"path":"https://Eflores89.github.io/notionR/reference/updateRelationship.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates (adds) a relationship to a page id — updateRelationship","text":"secret API token id Page id updated property_name name property update (relationship type property) value value update (unique page id)","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateSelect.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates a Select Property — updateSelect","title":"Updates a Select Property — updateSelect","text":"Id refers page database, normalized using normalizeChromeId().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateSelect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates a Select Property — updateSelect","text":"","code":"updateSelect(secret, id, property_name, value)"},{"path":"https://Eflores89.github.io/notionR/reference/updateSelect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates a Select Property — updateSelect","text":"secret API token id Page id updated property_name name property update (select type property) value value update","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateText.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates a Text Property — updateText","title":"Updates a Text Property — updateText","text":"Id refers page database, normalized using normalizeChromeId().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateText.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates a Text Property — updateText","text":"","code":"updateText(secret, id, property_name, value)"},{"path":"https://Eflores89.github.io/notionR/reference/updateText.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates a Text Property — updateText","text":"secret API token id Page id updated property_name name property update (text type property) value value update","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateTitle.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates a Title Property — updateTitle","title":"Updates a Title Property — updateTitle","text":"Id refers page database, normalized using normalizeChromeId().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateTitle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates a Title Property — updateTitle","text":"","code":"updateTitle(secret, id, property_name, value)"},{"path":"https://Eflores89.github.io/notionR/reference/updateTitle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates a Title Property — updateTitle","text":"secret API token id Page id updated property_name name property update (title property database) value value update","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateURL.html","id":null,"dir":"Reference","previous_headings":"","what":"Updates a URL Property — updateURL","title":"Updates a URL Property — updateURL","text":"Id refers page database, normalized using normalizeChromeId().","code":""},{"path":"https://Eflores89.github.io/notionR/reference/updateURL.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Updates a URL Property — updateURL","text":"","code":"updateURL(secret, id, property_name, value)"},{"path":"https://Eflores89.github.io/notionR/reference/updateURL.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Updates a URL Property — updateURL","text":"secret API token id Page id updated property_name name property update (URL type property) value value update","code":""},{"path":"https://Eflores89.github.io/notionR/news/index.html","id":"notionr-0009001","dir":"Changelog","previous_headings":"","what":"notionR 0.0.0.9001","title":"notionR 0.0.0.9001","text":"Start move httr2","code":""},{"path":"https://Eflores89.github.io/notionR/news/index.html","id":"notionr-0009000","dir":"Changelog","previous_headings":"","what":"notionR 0.0.0.9000","title":"notionR 0.0.0.9000","text":"First release","code":""}]
